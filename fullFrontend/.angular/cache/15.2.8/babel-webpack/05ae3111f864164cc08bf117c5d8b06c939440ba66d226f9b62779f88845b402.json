{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../services/account.service\";\nexport class LoginComponent {\n  constructor(formBuilder, route, router, accountService) {\n    this.formBuilder = formBuilder;\n    this.route = route;\n    this.router = router;\n    this.accountService = accountService;\n    this.form = this.formBuilder.group({\n      email: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n  // convenience getter for easy access to form fields\n  get f() {\n    return this.form.controls;\n  }\n  onSubmit() {\n    // stop here if form is invalid\n    if (this.form.invalid) {\n      return;\n    }\n    this.accountService.login(this.f.email.value, this.f.password.value).subscribe(result => {\n      if (result) {\n        this.router.navigate(['/']);\n      }\n    });\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AccountService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 18,\n  vars: 2,\n  consts: [[1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"email\"], [\"type\", \"text\", \"formControlName\", \"email\", 1, \"form-control\"], [\"for\", \"password\"], [\"type\", \"password\", \"formControlName\", \"password\", 1, \"form-control\"], [1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"routerLink\", \"../register\", 1, \"btn\", \"btn-link\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h4\", 1);\n      i0.ɵɵtext(2, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"form\", 3);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(5, \"div\", 4)(6, \"label\", 5);\n      i0.ɵɵtext(7, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 4)(10, \"label\", 7);\n      i0.ɵɵtext(11, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\", 4)(14, \"button\", 9);\n      i0.ɵɵtext(15, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"a\", 10);\n      i0.ɵɵtext(17, \"Register\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"disabled\", !ctx.form.valid);\n    }\n  },\n  dependencies: [i2.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAAsBA,UAAU,QAAQ,gBAAgB;;;;;AAUxD,OAAM,MAAOC,cAAc;EAMzBC,YACUC,WAAwB,EACxBC,KAAqB,EACrBC,MAAc,EACdC,cAA8B;IAH9B,gBAAW,GAAXH,WAAW;IACX,UAAK,GAALC,KAAK;IACL,WAAM,GAANC,MAAM;IACN,mBAAc,GAAdC,cAAc;IATxB,SAAI,GAAG,IAAI,CAACH,WAAW,CAACI,KAAK,CAAC;MAC5BC,KAAK,EAAE,CAAC,EAAE,EAAER,UAAU,CAACS,QAAQ,CAAC;MAChCC,QAAQ,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACS,QAAQ;KACnC,CAAC;EAOC;EAEH;EACA,IAAIE,CAAC;IACH,OAAO,IAAI,CAACC,IAAI,CAACC,QAAQ;EAC3B;EAEAC,QAAQ;IACN;IACA,IAAI,IAAI,CAACF,IAAI,CAACG,OAAO,EAAE;MACrB;;IAGF,IAAI,CAACT,cAAc,CAChBU,KAAK,CAAC,IAAI,CAACL,CAAC,CAACH,KAAK,CAACS,KAAe,EAAE,IAAI,CAACN,CAAC,CAACD,QAAQ,CAACO,KAAe,CAAC,CACpEC,SAAS,CAAEC,MAAM,IAAI;MACpB,IAAIA,MAAM,EAAE;QACV,IAAI,CAACd,MAAM,CAACe,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;;IAE/B,CAAC,CAAC;EACN;;AA/BWnB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAoB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCX3BC,8BAAkB;MACQA,qBAAK;MAAAA,iBAAK;MAClCA,8BAAuB;MACIA;QAAA,OAAYC,cAAU;MAAA,EAAC;MAC9CD,8BAAwB;MACHA,qBAAK;MAAAA,iBAAQ;MAChCA,2BAAkE;MACpEA,iBAAM;MACNA,8BAAwB;MACAA,yBAAQ;MAAAA,iBAAQ;MACtCA,4BAIE;MACJA,iBAAM;MACNA,+BAAwB;MACmCA,sBAAK;MAAAA,iBAAS;MACvEA,8BAAiD;MAAAA,yBAAQ;MAAAA,iBAAI;;;MAf3DA,eAAkB;MAAlBA,oCAAkB;MAcZA,gBAAwB;MAAxBA,0CAAwB","names":["Validators","LoginComponent","constructor","formBuilder","route","router","accountService","group","email","required","password","f","form","controls","onSubmit","invalid","login","value","subscribe","result","navigate","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\novak\\Documents\\msgSystems\\alphaAppFront\\MSG\\fullFrontend\\src\\app\\account\\component\\login\\login.component.ts","C:\\Users\\novak\\Documents\\msgSystems\\alphaAppFront\\MSG\\fullFrontend\\src\\app\\account\\component\\login\\login.component.html"],"sourcesContent":["import { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\n\r\nimport { AccountService } from '../services/account.service';\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n})\r\nexport class LoginComponent {\r\n  form = this.formBuilder.group({\r\n    email: ['', Validators.required],\r\n    password: ['', Validators.required],\r\n  });\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private accountService: AccountService\r\n  ) {}\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  onSubmit() {\r\n    // stop here if form is invalid\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.accountService\r\n      .login(this.f.email.value as string, this.f.password.value as string)\r\n      .subscribe((result) => {\r\n        if (result) {\r\n          this.router.navigate(['/']);\r\n        }\r\n      });\r\n  }\r\n}\r\n","<div class=\"card\">\r\n  <h4 class=\"card-header\">Login</h4>\r\n  <div class=\"card-body\">\r\n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n      <div class=\"form-group\">\r\n        <label for=\"email\">Email</label>\r\n        <input type=\"text\" formControlName=\"email\" class=\"form-control\" />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"password\">Password</label>\r\n        <input\r\n          type=\"password\"\r\n          formControlName=\"password\"\r\n          class=\"form-control\"\r\n        />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <button [disabled]=\"!form.valid\" class=\"btn btn-primary\">Login</button>\r\n        <a routerLink=\"../register\" class=\"btn btn-link\">Register</a>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}